{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FILED_ALPHABET","SORT_FILED_LENGTH","App","useState","sortFielde","setSortFielde","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8CIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,WAAYE,EAAa,EAAbA,UACvCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAOHO,CAAiBlB,EAAiB,CAAEK,aAAYE,cAEpD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYhB,IAAeJ,IAG/BqB,QAAS,kBAAMhB,EAAcL,IAT/B,iCAcA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYhB,IAAeH,IAG/BoB,QAAS,kBAAMhB,EAAcJ,IAT/B,4BAcA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAA0B,IAAdd,IAGhBe,QAAS,kBAAOd,GAAcD,IAThC,sBAciB,KAAfF,GAAqBE,IACrB,wBACEe,QAAS,WACPhB,EAAc,IACdE,GAAa,IAEfY,KAAK,SACLD,UAAU,4BANZ,sBAaJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC3JjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.85316e77.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// export const App = () => (\n//   <div className=\"section content\">\n//     <div className=\"buttons\">\n//       <button\n//         type=\"button\"\n//         className=\"button is-info is-light\"\n//       >\n//         Sort alphabetically\n//       </button>\n\n//       <button\n//         type=\"button\"\n//         className=\"button is-success is-light\"\n//       >\n//         Sort by length\n//       </button>\n\n//       <button\n//         type=\"button\"\n//         className=\"button is-warning is-light\"\n//       >\n//         Reverse\n//       </button>\n\n//       <button\n//         type=\"button\"\n//         className=\"button is-danger is-light\"\n//       >\n//         Reset\n//       </button>\n//     </div>\n\n//     <ul>\n//       <li data-cy=\"Good\">Dumplings</li>\n//       <li data-cy=\"Good\">Carrot</li>\n//       <li data-cy=\"Good\">Eggs</li>\n//       <li data-cy=\"Good\">Ice cream</li>\n//       <li data-cy=\"Good\">Apple</li>\n//       <li data-cy=\"Good\">...</li>\n//     </ul>\n//   </div>\n// );\n\nconst SORT_FILED_ALPHABET = 'alphabet';\nconst SORT_FILED_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortFielde, isReverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortFielde) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortFielde) {\n        case SORT_FILED_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FILED_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortFielde, setSortFielde] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortFielde, isReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortFielde !== SORT_FILED_ALPHABET,\n            },\n          )}\n          onClick={() => setSortFielde(SORT_FILED_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortFielde !== SORT_FILED_LENGTH,\n            },\n          )}\n          onClick={() => setSortFielde(SORT_FILED_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': isReverse !== true,\n            },\n          )}\n          onClick={() => (setIsReverse(!isReverse))}\n        >\n          Reverse\n        </button>\n\n        {(sortFielde !== '' || isReverse) && (\n          <button\n            onClick={() => {\n              setSortFielde('');\n              setIsReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}